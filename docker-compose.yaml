version: "3.6"
services:
  job-server:
    #build: https://github.com/opensafely/job-server.git
    build: ../job-server
    command: bash -c "python manage.py loaddata user.json && python manage.py runserver 0.0.0.0:8000"
    environment:
      - OPENSAFELY_JOB_SERVER_SECRET_KEY=asd
      # GitHub OAuth credentials
      - SOCIAL_AUTH_GITHUB_KEY=${OPENSAFELY_GITHUB_OAUTH_CLIENT_KEY}
      - SOCIAL_AUTH_GITHUB_SECRET=${OPENSAFELY_GITHUB_OAUTH_CLIENT_SECRET}
    ports:
      - "8000:8000"
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./user.json:/app/user.json
  job-runner:
    #build: https://github.com/opensafely/job-runner.git
    build: ../job-runner
    environment:
      # The backend requests which we should monitor
      - BACKEND=expectations
      # Credentials for acessing the job server
      - QUEUE_USER=test
      - QUEUE_PASS=test
      # A location where outputs should be stored
      - HIGH_PRIVACY_STORAGE_BASE=/tmp/outputs/high_security
      - MEDIUM_PRIVACY_STORAGE_BASE=/tmp/outputs/medium_security
      # A Github developer access key which can read private repos
      - PRIVATE_REPO_ACCESS_TOKEN=${OPENSAFELY_PRIVATE_REPO_ACCESS_TOKEN}
      # Database URLs
      - FULL_DATABASE_URL=${OPENSAFELY_FULL_DATABASE_URL}
      - SLICE_DATABASE_URL=${OPENSAFELY_SLICE_DATABASE_URL}
      - DUMMY_DATABASE_URL=${OPENSAFELY_DUMMY_DATABASE_URL}
    volumes:
      - type: bind
        source: /tmp/outputs/medium_security
        target: /tmp/outputs/medium_security
      - type: bind
        source: /tmp/outputs/high_security
        target: /tmp/outputs/high_security
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    restart: on-failure
    depends_on:
      - job-server
    command: watch http://job-server:8000/api/jobs/
